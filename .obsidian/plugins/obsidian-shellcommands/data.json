{
  "settings_version": "0.20.0",
  "debug": false,
  "obsidian_command_palette_prefix": "Execute: ",
  "preview_variables_in_command_palette": true,
  "show_autocomplete_menu": true,
  "working_directory": "",
  "default_shells": {},
  "environment_variable_path_augmentations": {},
  "error_message_duration": 20,
  "notification_message_duration": 10,
  "execution_notification_mode": "disabled",
  "output_channel_clipboard_also_outputs_to_notification": true,
  "output_channel_notification_decorates_output": true,
  "enable_events": true,
  "approve_modals_by_pressing_enter_key": true,
  "command_palette": {
    "re_execute_last_shell_command": {
      "enabled": true,
      "prefix": "Re-execute: "
    }
  },
  "max_visible_lines_in_shell_command_fields": false,
  "shell_commands": [
    {
      "id": "47i9ffqhj6",
      "platform_specific_commands": {
        "default": "echo"
      },
      "shells": {},
      "alias": "Glossary Find",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_wrappers": {
        "stdout": "8j00ee490h",
        "stderr": "8j00ee490h"
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [
        {
          "type": "prompt",
          "enabled": false,
          "prompt_id": ""
        }
      ],
      "variable_default_values": {},
      "output_handlers": {
        "stdout": {
          "handler": "current-file-caret",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      }
    },
    {
      "id": "2qptaq9cna",
      "platform_specific_commands": {
        "default": "AddRevised \"{{folder_path:absolute}}\" \"{{file_name}}\""
      },
      "shells": {
        "win32": "xg2oelk04o"
      },
      "alias": "Revised From Prep",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [
        {
          "type": "prompt",
          "enabled": false,
          "prompt_id": ""
        }
      ],
      "variable_default_values": {},
      "output_handlers": {
        "stdout": {
          "handler": "notification",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      }
    },
    {
      "id": "6ibm8snspz",
      "platform_specific_commands": {
        "default": "echo"
      },
      "shells": {},
      "alias": "",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    },
    {
      "id": "zww1p1sh8f",
      "platform_specific_commands": {
        "default": "move \"{{folder_path:absolute}}\" \"C:\\Users\\willf\\Obsidian Archive\" && cd \"C:\\Users\\willf\\Obsidian Archive\" && git add * && git commit -m \"{{date:}}\" && git push"
      },
      "shells": {},
      "alias": "Archive Folder",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    },
    {
      "id": "t6dciijkim",
      "platform_specific_commands": {
        "default": "move \"{{file_path:absolute}}\" \"C:\\Users\\willf\\Obsidian Archive\" && cd \"C:\\Users\\willf\\Obsidian Archive\" && git add * && git commit -m \"{{date: D.MM.Y}}\" && git push"
      },
      "shells": {},
      "alias": "Archive File",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    },
    {
      "id": "5gxhwy79ea",
      "platform_specific_commands": {
        "default": "cd C:\\Users\\willf\\quartz && git pull && git add * && git commit -m \"Vault Backup: {{date:D.MM.YY HH:mm}}\" && git push"
      },
      "shells": {},
      "alias": "Quartz Sync",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "notification",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {
        "every-n-seconds": {
          "enabled": true,
          "seconds": 1500
        }
      },
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    },
    {
      "id": "pvk0x0bmn7",
      "platform_specific_commands": {
        "default": "start brave isthatfearny.github.io/quartz"
      },
      "shells": {},
      "alias": "View online vault",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {
        "every-n-seconds": {
          "enabled": false,
          "seconds": 1500
        }
      },
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    },
    {
      "id": "o5qg3mniwu",
      "platform_specific_commands": {
        "default": "echo $\\quad$"
      },
      "shells": {},
      "alias": "Indent",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "current-file-caret",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": "ipv0i8wrti",
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    }
  ],
  "prompts": [],
  "builtin_variables": {},
  "custom_variables": [],
  "custom_shells": [
    {
      "id": "xg2oelk04o",
      "name": "WSL",
      "description": "Windows Subsystem for Linux",
      "binary_path": "C:\\Windows\\System32\\wsl.exe",
      "shell_arguments": [
        "--",
        "{{!shell_command_content}}"
      ],
      "host_platform": "win32",
      "host_platform_configurations": {
        "win32": {
          "quote_shell_arguments": false
        }
      },
      "shell_platform": "linux",
      "escaper": null,
      "path_translator": "const pathParts = absolutePath.match(/^([a-z]):\\/(.+)$/ui);\nconst driveLetter = pathParts[1];\nconst trailingPath = pathParts[2];\nreturn '/mnt/' + driveLetter.toLocaleLowerCase() + '/' + trailingPath;",
      "shell_command_wrapper": null,
      "shell_command_test": "echo \"Hello\""
    }
  ],
  "output_wrappers": [
    {
      "id": "8j00ee490h",
      "title": "Glossary Wrapper",
      "content": "[[{{folder_name}}/Glossary#{{selection}}|{{selection}}]]"
    },
    {
      "id": "ipv0i8wrti",
      "title": "Indent",
      "content": "{{output}}"
    }
  ]
}